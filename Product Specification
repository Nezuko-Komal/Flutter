import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:retailer_app/constant/config.dart';
import 'package:retailer_app/models/final.dart';
import 'package:retailer_app/screens/dashboard.dart';
import 'package:retailer_app/services/all_services.dart';

class productvariants extends StatefulWidget {
  final String id;
  const productvariants({required this.id, Key? key}) : super(key: key);

  @override
  State<productvariants> createState() => _productvariantsState();
}

class _productvariantsState extends State<productvariants> {
  late ProductM data;
  late List<ProductM> prod;
  bool isLoading = true;
  int currentindex = 0;
  final PageController controller = PageController();
  int countOfProduct = 1;

  @override
  void initState() {
    super.initState();
    viewProduct();
  }

  void viewProduct() async {
    prod = await fetchProductData(widget.id);
    if (prod.isNotEmpty) {
      setState(() {
        data = prod[0];
        isLoading = false;
      });
    } else {
      ScaffoldMessenger.of(context).showSnackBar(const SnackBar(
        content: Text("NO Data Found"),
        backgroundColor: Colors.red,
      ));
      Navigator.pushReplacement(
          context, MaterialPageRoute(builder: (context) => const RDashBoard()));
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Color.fromARGB(255, 0, 0, 0),
        title: const Center(
          child: Text(""),
        ),
        leading: IconButton(
          icon: const Icon(Icons.arrow_back),
          color: Color(0xFFEBE55A),
          onPressed: () {
            Navigator.pop(context);
          },
        ),
      ),
      body: isLoading
          ? const Center(child: CircularProgressIndicator())
          : Stack(
              children: [
                Container(
                  decoration: BoxDecoration(
                    image: DecorationImage(
                      image: AssetImage("assets/profileBg.jpeg"),
                      fit: BoxFit.cover,
                    ),
                  ),
                ),
                Container(
                  margin: const EdgeInsets.only(left: 15, right: 15),
                  child: Column(
                    children: <Widget>[
                      SingleChildScrollView(
                        scrollDirection: Axis.vertical,
                        child: Container(
                          decoration: BoxDecoration(
                            color: Colors.white,
                            borderRadius: BorderRadius.circular(14),
                          ),
                          margin: const EdgeInsets.only(top: 20),
                          padding: const EdgeInsets.all(15),
                          child: SizedBox(
                            height: 200,
                            width: double.infinity,
                            child: PageView.builder(
                              controller: controller,
                              onPageChanged: (index) {
                                setState(() {
                                  currentindex = index %
                                      data.productalldetails.photo.length;
                                });
                              },
                              itemBuilder: (context, index) {
                                return Row(
                                  mainAxisAlignment:
                                      MainAxisAlignment.spaceBetween,
                                  children: [
                                    IconButton(
                                      onPressed: () {
                                        controller.jumpToPage(currentindex - 1);
                                        if (currentindex == 0) {
                                          currentindex = data.productalldetails.photo.length;
                                        }
                                      },
                                      icon: const Icon(
                                        Icons.arrow_back_ios_new,
                                        size: 15,
                                      ),
                                    ),
                                    SizedBox(
                                      height: 250,
                                      child: Image.network(
                                        '$baseUrl${data.productalldetails.photo[currentindex % data.productalldetails.photo.length]}',
                                      ),
                                    ),
                                    IconButton(
                                      onPressed: () {
                                        controller.jumpToPage(currentindex + 1);
                                      },
                                      icon: const Icon(
                                        Icons.arrow_forward_ios,
                                        size: 15,
                                      ),
                                    ),
                                  ],
                                );
                              },
                            ),
                          ),
                        ),
                      ),
                      const SizedBox(
                        height: 13,
                      ),
                      SingleChildScrollView(
                        child: Container(
                          padding: const EdgeInsets.all(20),
                          decoration: const BoxDecoration(
                            color: Colors.white,
                            borderRadius: BorderRadius.only(
                              topLeft: Radius.circular(20.0),
                              topRight: Radius.circular(20.0),
                            ),
                          ),
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  Text(
                                    data.productalldetails.productName,
                                    style: const TextStyle(
                                      fontWeight: FontWeight.bold,
                                      fontSize: 15,
                                    ),
                                  ),
                                  Text(
                                    "â‚¹ " + data.price.toString(),
                                    style: const TextStyle(
                                      fontWeight: FontWeight.bold,
                                      fontSize: 15,
                                    ),
                                  ),
                                  const Divider(
                                    thickness: 0.7,
                                    color: Colors.grey,
                                  ),
                                  Container(
                                    height: 90,
                                    child: ListView.builder(
                                      scrollDirection: Axis.horizontal,
                                      itemCount: prod.length,
                                      itemBuilder: (BuildContext context, int index) {
                                        return Padding(
                                          padding: const EdgeInsets.only(right: 10.0),
                                          child: GestureDetector(
                                            onTap: () {
                                              setState(() {
                                                data = prod[index];
                                                currentindex = 0;
                                              });
                                            },
                                            child: Material(
                                              elevation: 3,
                                              child: Container(
                                                width: 80,
                                                decoration: BoxDecoration(
                                                  color: Colors.white,
                                                  border: Border.all(
                                                      color: const Color.fromARGB(255, 2, 2, 2)),
                                                ),
                                                child: Image.network(
                                                  '$baseUrl${prod[index].productalldetails.photo.first}',
                                                ),
                                              ),
                                            ),
                                          ),
                                        );
                                      },
                                    ),
                                  ),
                                ],
                              ),
                              const Divider(
                                thickness: 0.7,
                                color: Colors.grey,
                              ),
                              SingleChildScrollView(
                                scrollDirection: Axis.vertical,
                                child: Column(
                                  crossAxisAlignment: CrossAxisAlignment.start,
                                  children: [
                                    const Text(
                                      "Quantity",
                                      style: TextStyle(
                                        fontWeight: FontWeight.bold,
                                        fontSize: 16,
                                      ),
                                    ),
                                    const SizedBox(
                                      height: 5,
                                    ),
                                    Container(
                                      child: Row(
                                        children: [
                                          CircleAvatar(
                                            radius: 18,
                                            child: IconButton(
                                              onPressed: () {
                                                setState(() {
                                                  if (countOfProduct > 1) {
                                                    countOfProduct--;
                                                  }
                                                });
                                              },
                                              icon: const Icon(Icons.horizontal_rule),
                                              iconSize: 20,
                                            ),
                                          ),
                                          const SizedBox(
                                            width: 10,
                                          ),
                                          SizedBox(
                                            height: 35,
                                            width: 80,
                                            child: TextField(
                                              textAlign: TextAlign.center,
                                              controller: TextEditingController()
                                                ..text = countOfProduct.toString(),
                                              readOnly: true,
                                              decoration: const InputDecoration(
                                                focusedBorder: OutlineInputBorder(
                                                  borderSide: BorderSide(color: Colors.amber),
                                                ),
                                                border: OutlineInputBorder(),
                                                hintText: '1',
                                                hintStyle: TextStyle(
                                                  fontSize: 16,
                                                  fontWeight: FontWeight.w300,
                                                ),
                                              ),
                                            ),
                                          ),
                                          const SizedBox(
                                            width: 10,
                                          ),
                                          CircleAvatar(
                                            radius: 18,
                                            child: IconButton(
                                              onPressed: () {
                                                setState(() {
                                                  countOfProduct++;
                                                });
                                              },
                                              icon: const Icon(Icons.add),
                                              iconSize: 20,
                                            ),
                                          ),
                                          SizedBox(
                                            width: 20,
                                          ),
                                          Column(
                                            children: [
                                              Text("Price",style: TextStyle(
                                        fontWeight: FontWeight.bold,
                                        fontSize: 16,
                                      ),),
                                               SizedBox(
                                            height: 35,
                                            width: 80,
                                            child: TextField(
                                              textAlign: TextAlign.center,
                                              controller: TextEditingController()
                                                ..text = countOfProduct.toString(),
                                              readOnly: true,
                                              decoration: const InputDecoration(
                                                focusedBorder: OutlineInputBorder(
                                                  borderSide: BorderSide(color: Colors.amber),
                                                ),
                                                border: OutlineInputBorder(),
                                                hintText: 'Price',
                                                hintStyle: TextStyle(
                                                  fontSize: 16,
                                                  fontWeight: FontWeight.w300,
                                                ),
                                              ),
                                            ),
                                          ),
                                            ],
                                          ),
                                        ],
                                      ),
                                    )
                                  ],
                                ),
                              ),
                              const SizedBox(
                                height: 10,
                              ),
                              const Text(
                                "Product Details",
                                style: TextStyle(fontSize: 16, fontWeight: FontWeight.w500),
                              ),
                              Container(
                                height: MediaQuery.of(context).size.height * 0.22,
                                child: ListView.builder(
                                  itemCount: 1,
                                  itemBuilder: (context, index) {
                                    return Column(
                                      crossAxisAlignment: CrossAxisAlignment.start,
                                      children: [
                                        ListView.builder(
                                          shrinkWrap: true,
                                          physics: const NeverScrollableScrollPhysics(),
                                          itemCount:
                                              data.productalldetails.specification.length,
                                          itemBuilder: (context, subIndex) {
                                            final specKey = data.productalldetails
                                                .specification.keys
                                                .elementAt(subIndex);

                                            final subKeys = data.productalldetails
                                                .specification[specKey]
                                                .keys
                                                .toList();

                                            return Column(
                                              crossAxisAlignment: CrossAxisAlignment.start,
                                              children: [
                                                ListTile(
                                                  title: Text(
                                                    specKey,
                                                    style: const TextStyle(
                                                      fontWeight: FontWeight.bold,
                                                      fontSize: 13,
                                                    ),
                                                  ),
                                                ),
                                                ListView.builder(
                                                  shrinkWrap: true,
                                                  physics: const NeverScrollableScrollPhysics(),
                                                  itemCount: subKeys.length,
                                                  itemBuilder: (context, subSubIndex) {
                                                    final subKey =
                                                        subKeys.elementAt(subSubIndex);
                                                    final titleValue = data
                                                        .productalldetails.specification[specKey]
                                                            [subKey]['title']
                                                        .toString();

                                                    return ListTile(
                                                      title: Container(
                                                        margin: const EdgeInsets.only(left: 20),
                                                        child: Row(
                                                          mainAxisAlignment:
                                                              MainAxisAlignment.spaceBetween,
                                                          children: [
                                                            Text(
                                                              subKey.toString(),
                                                              style: const TextStyle(
                                                                fontSize: 14,
                                                              ),
                                                            ),
                                                            Text(
                                                              titleValue,
                                                              style: const TextStyle(
                                                                fontSize: 12,
                                                              ),
                                                            )
                                                          ],
                                                        ),
                                                      ),
                                                    );
                                                  },
                                                ),
                                              ],
                                            );
                                          },
                                        ),
                                        const Divider(
                                          color: Colors.black,
                                        ),
                                      ],
                                    );
                                  },
                                ),
                              ),
                            ],
                          ),
                        ),
                      ),
                    ],
                  ),
                ),
              ],
            ),
    );
  }
}
